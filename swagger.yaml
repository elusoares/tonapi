swagger: '2.0'
info:
  description: This is a quick description of my TonApi
  version: 1.0.0
  title: Simple Inventory API
  # put the contact info for your development or API team
  contact:
    email: elusaisoares@gmail.com
tags: [
  {
    name: countAPI,
    description: enable user to increase a counter as well as get its current value.
  },
  {
    name: users,
    description: enable user to create a new user as well as get a specific user by its id.
  }
]
paths:
  /get-counter:
    get:
      tags: 
      - countAPI
      summary: get the current value on Count Api key
      produces:
      - application/json
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/getCounterResponse'
        502:
          description: bad gateway
  /hit-counter:
    get:
      tags:
      - countAPI
      summary: increase the current value on Count Api key by one
      produces:
      - application/json
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/hitCounterResponse'
        502:
          description: bad gateway
  /create-user:
    post:
      tags:
      - users
      summary: create new user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: newUser
        description: new user to add
        schema:
          $ref: '#/definitions/newUserParameters'
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/newUserResponse'
        400:
          description: name, email and password are required
        409:
          description: email already in use
  /get-user:
    get:
      tags:
      - users
      summary: get a user by its id
      produces:
      - application/json
      parameters:
      - in: query
        description: uuid to get a user
        required: true
        type: string
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/getUserResponse'
        502:
          description: bad gateway
        400:
          description: you must provide a user id
definitions:
  getCounterResponse:
    type: object
    properties:
      currentCounterValue:
        type: number
        example: 10
  hitCounterResponse:
    type: object
    properties:
      counterNewValue:
        type: number
        example: 11
  newUserParameters:
    type: object
    required:
    - name
    - email
    - password
    properties:
      name:
        type: string
        example: Jhon Doe
      email:
        type: string
        example: jhondoe@gmail.com
      password:
        type: string
        example: 123jhondoe456
  newUserResponse:
    type: object
    properties:
      user_id:
        type: string
        example: 8bbad7b6-b350-458e-b399-cf468c4f8982
      user_name:
        type: string
        example: Jhon Doe
      user_email:
        type: string
        example: jhondoe@gmail.com
      user_created_at:
        type: string
        example: '2022-06-23T17:39:13.504Z'
  getUserResponse:
    type: object
    properties:
      user_name:
        type: string
        example: Jhon Doe
      user_email:
        type: string
        example: jhondoe@gmail.com
      user_created_at:
        type: string
        example: '2022-06-23T17:39:13.504Z'
# Added by API Auto Mocking Plugin
# host: p4xxwnppv0.execute-api.sa-east-1.amazonaws.com/Prod
schemes:
 - https
